@model List<Orneholm.NewsSearch.Web.Models.SrAnalyzedEpisode>
@{
    ViewData["Title"] = "Home Page";
}

<header>
    <h1><i class="fad fa-radio"></i> Radio News Search</h1>

    <div class="text-white text-center" style="font-size: 0.8em;">
        <p>
            Transcribing news shows from <a href="https://www.sverigesradio.se/">Sveriges Radio</a> (Radio Sweden), making them searchable and filterable.<br />
            Using <a href="https://azure.microsoft.com/en-us/services/cognitive-services/" target="_blank">Azure Cognitive Services</a> to transcribe and enrich the episodes.<br />
            Developed by <a href="https://twitter.com/PeterOrneholm" target="_blank">@@PeterOrneholm</a> as a demo for the session <a href="http://bit.ly/peterorneholm-democratizing-ai">Democratizing AI with Azure Cognitive Services</a>.
        </p>
    </div>
</header>

<div style="max-width: 600px; margin: 0 auto;">

    @foreach (var episode in Model)
    {
        <div class="card mb-4">
            <div style="background: url('@episode.EpisodeImageUrl') no-repeat center; background-size: cover; height: 250px;" class="card-img-top"></div>
            <div class="card-body">
                <h3 class="card-title">@episode.EpisodeTitle</h3>

                <p class="card-text"><small class="text-muted">@episode.PublishDateUtc.ToLongDateString() - @episode.ProgramName</small></p>

                <p class="card-text"><strong>Description:</strong> @episode.EpisodeDescription</p>

                <iframe class="mx-y" width="100%" height="150" src="https://sverigesradio.se/embed/episode/@episode.EpisodeId" frameborder="0"></iframe>

                <details class="card-text my-1">
                    <summary class="font-weight-bold">Transcription</summary>

                    @episode.OriginalDisplayTranscription
                </details>

                <details class="card-text my-1">
                    <summary class="font-weight-bold">Keyphrases</summary>
                    @foreach (var tag in episode.TranscriptionKeyPhrases)
                    {
                        <a href="?keyphrase=@Uri.EscapeDataString(tag)" class="badge badge-pill badge-primary">@tag</a>
                    }
                </details>

                <details class="card-text my-1">
                    <summary class="font-weight-bold">Enteties</summary>
                    @foreach (var tag in episode.TranscriptionEntities)
                    {
                        <a href="?entityName=@Uri.EscapeDataString(tag.Name)&entityType=@Uri.EscapeDataString(tag.Type)" class="badge badge-pill badge-info">@tag.Name (@tag.Type)</a>
                    }
                </details>

                <p class="card-text">
                    <strong>Sentiment:</strong> @episode.TranscriptionSentiment?.ToString("P")
                </p>

                <a href="@episode.EpisodeWebUrl" class="btn btn-primary" style="width: 100%;">Read full article</a>
            </div>
        </div>
    }
</div>

@section Scripts
{
    <script>
        window.launchImmersiveReader = function (title, text) {
            var content = {
                title: title,
                chunks: [{
                    content: text
                }]
            };
            window.ImmersiveReader.launchAsync('', '', content);
        }
    </script>
}
